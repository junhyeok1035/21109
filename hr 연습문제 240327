21. 부서번호가 100 사원의 사원번호, LAST_NAME, 부서이름을 조회하시오 (인라인뷰사용)
/* 인라인 뷰란, SELECT 문의 결과로 보여지는 가상테이블(뷰)를 실제 테이블처럼 쿼리문에서 이용하는 기법, 즉 FROM 절에서 이용*/
SELECT EMPLOYEE_ID,LAST_NAME,DEPARTMENT_NAME
FROM (SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 100) E100, DEPARTMENTS D
WHERE E100.DEPARTMENT_ID = D.DEPARTMENT_ID;
22. 사원들의 LAST_NAME, 부서번호, 부서명을 조회하시오. (스칼라 서브쿼리로 조회)을 조회하시오.(스칼라서브쿼리 -- SELECT절에 사용하는 쿼리 이용 --)
SELECT LAST_NAME, DEPARTMENT_ID,
(SELECT DEPARTMENT_NAME FROM DEPARTMENTS D WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID)
FROM EMPLOYEES E;
23. 전체 사원 중 Austin과 같은 직책(JOB_ID)인 사원들의 사원번호와 부서명을 출력하시오.
SELECT EMPLOYEE_ID, DEPARTMENT_NAME
FROM DEPARTMENTS D, EMPLOYEES E
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID 
AND (SELECT JOB_ID FROM EMPLOYEES WHERE LAST_NAME = 'Austin') = JOB_ID;
24 전체사원의 평균급여 보다 높은 급여를 받는 사원들의 사원번호, 부서명, 도시명, 급여를 출력하시오.(급여의 내림차순으로 정렬)
SELECT EMPLOYEE_ID , DEPARTMENT_NAME , CITY , SALARY
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND D.LOCATION_ID = L.LOCATION_ID
AND SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
ORDER BY SALARY DESC;
25 110번 부서에서 근무하는 사원 중 30번 부서에는 존재하지 않는 직책을 가진 사원의 LAST_NAME과 부서명을 출력하시오.
(30번 부서에는 존재하는 직책에 대해 서브쿼리로 뷰를 만들기)
SELECT LAST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES E ,DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.DEPARTMENT_ID = 110
AND JOB_ID NOT IN (SELECT JOB_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 30);
26 직책(JOB_ID)이 SA_MAN인 사람들의 최고 급여보다 높은 급여를 받는 사원의 사원번호와 급여를 출력하시오.
SELECT EMPLOYEE_ID, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'SA_MAN');
27 회사 전체의 최대 연봉, 최소 연봉, 연봉 총 합 및 평균 연봉을 자연수로 포멧(ROUND)하여 조회한다,
SELECT MAX(SALARY), MIN(SALARY), SUM(SALARY),ROUND(AVG(SALARY))
FROM EMPLOYEES;
28. 각 JOB_ID 별, 최대 연봉, 최소 연봉, 연봉 총 합 및 평균 연봉을 자연수로 포멧하여 조회한다.(JOB_ID 오름차순)
SELECT MAX(SALARY), MIN(SALARY), SUM(SALARY),ROUND(AVG(SALARY))
FROM EMPLOYEES
GROUP BY JOB_ID
ORDER BY JOB_ID;
29 동일한 직업(JOB_ID 동일)을 가진 사원들의 총 수를 조회한다. (JOB_ID오름차순)
SELECT JOB_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
GROUP BY JOB_ID
ORDER BY JOB_ID;
30 매니저로 근무하는 사원들의 총 수를 조회한다.
SELECT COUNT(DISTINCT MANAGER_ID) FROM EMPLOYEES;
(서브쿼리있는 쿼리문으로도 작성해보시오. 사원번호를 카운트 하시오.)
select count(employee_id)
from employees
where employee_id in (select manager_id from employees);
31 사내의 최대 연봉 및 최소 연봉의 차이를 조회한다.
select max(salary), min(salary),max(salary)-min(salary)
from employees;
32 매니저의 사변 및 그 매니저 밑 사원들 중 최소 연봉을 받는 사원의 연봉을 조회한다.
-- 매니저가 없는 사람들은 제외한다
-- 최소연봉이 6000 미만인 경우는 제외한다 (having절 이용)
-- 연봉 기준 역순으로 조회한다.
select manager_id, min(salary)
from employees 
where manager_id is not null
group by manager_id
having min(salary) >= 6000
order by min(salary) desc;
-- 연봉 6000이 넘는 사원 중, 최소 연봉을 매니저별로 조회
select manager_id, min(salary)
from employees
where manager_id is not null and salary >= 6000
group by manager_id
order by min(salary) desc;
